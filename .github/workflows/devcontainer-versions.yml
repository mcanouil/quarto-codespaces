name: Dev Container Docker Image Build Versions

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Dev Container Docker Image Build"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build - Quarto ${{ matrix.QUARTO_VERSION }}
    strategy:
      matrix:
        QUARTO_VERSION:
          - 1.0
          - 1.1
          - 1.2
          - 1.3
          - 1.4
          - 1.5
          - 1.6
          - 1.7
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@v3
        with:
          use: true

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and run Dev Container on release
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}
          cacheFrom: ghcr.io/${{ github.repository }}
          noCache: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
          imageTag: ${{ matrix.QUARTO_VERSION }}
          push: always
          platform: linux/amd64
          # platform: linux/amd64,linux/arm64
          configFile: ${{ format('.devcontainer/mcanouil-{0}/devcontainer.json', matrix.QUARTO_VERSION) }}

  clean:
    needs: "build"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Delete obsolete/untagged versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: "container"
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-only-untagged-versions: "true"
