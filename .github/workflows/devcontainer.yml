name: "Build: Docker Images"

on:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: "0 6 * * sun"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build - Quarto ${{ matrix.QUARTO_VERSION }}
    if: >-
      ! endsWith(github.event.pull_request.user.login, '[bot]') &&
        (
          github.event_name == 'release' ||
            github.event_name == 'workflow_dispatch' ||
            github.event_name == 'pull_request'
        )
    strategy:
      matrix:
        include:
          - QUARTO_VERSION: release
            IMAGE_TAG: release,release-jammy,latest
          - QUARTO_VERSION: prerelease
            IMAGE_TAG: prerelease,prerelease-jammy
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@v3
        with:
          use: true
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Define Image Version
        id: image_version
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
      - name: Build and run Dev Container on release
        id: devcontainer-ci
        uses: devcontainers/ci@v0.3
        with:
          imageTag: ${{ matrix.IMAGE_TAG }}
          subFolder: .github
          imageName: ghcr.io/${{ github.repository }}
          noCache: true
          eventFilterForPush: "release"
          platform: linux/amd64
          runCmd: echo "$(CI=true quarto check 2>&1)" | sed '/^(/d; s/\x1b\[[0-9;]*[mGK]//g'
        env:
          IMAGE: "buildpack-deps:jammy-curl"
          QUARTO_VERSION: ${{ matrix.QUARTO_VERSION }}
          USER: "vscode"
          ANNOTATION_VERSION: "${{ steps.image_version.outputs.VERSION }} (${{ github.sha }})"
          ANNOTATION_TITLE: "Quarto Codespaces"
          ANNOTATION_DESCRIPTION: "Quarto Codespaces / Dev Containers setup for quick online testing and workshops."
          ANNOTATION_AUTHORS: "MickaÃ«l CANOUIL <https://mickael.canouil.fr>"
          ANNOTATION_URL: ${{ github.server_url }}/${{ github.repository }}
          ANNOTATION_LICENSE: "MIT"
      - name: Test Dev Container
        env:
          QUARTO_VERSION: ${{ matrix.QUARTO_VERSION }}
          DEVCONTAINER_RUN_CMD: ${{ steps.devcontainer-ci.outputs.runCmdOutput }}
        run: |
          echo "::group::Quarto Check"
          echo "${DEVCONTAINER_RUN_CMD}"
          echo "::endgroup::"

          echo "## Quarto Check Results: ${QUARTO_VERSION}" >>$GITHUB_STEP_SUMMARY
          echo "<details><summary>Quarto Check Results</summary>" >>$GITHUB_STEP_SUMMARY
          echo "" >>$GITHUB_STEP_SUMMARY
          echo '```txt' >>$GITHUB_STEP_SUMMARY
          echo "${DEVCONTAINER_RUN_CMD}" >>$GITHUB_STEP_SUMMARY
          echo '```' >>$GITHUB_STEP_SUMMARY
          echo "" >>$GITHUB_STEP_SUMMARY
          echo "</details>" >>$GITHUB_STEP_SUMMARY

  build-versions:
    runs-on: ubuntu-latest
    needs:
      - "build"
    if: >-
      github.event_name == 'release' ||
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'schedule'
    name: Build - Quarto ${{ matrix.QUARTO_VERSION }}
    strategy:
      matrix:
        PLATFORM:
          - "linux/amd64"
        QUARTO_VERSION:
          - "1.0"
          - "1.1"
          - "1.2"
          - "1.3"
          - "1.4"
          - "1.5"
          - "1.6"
          - "1.7"
        include:
          - QUARTO_VERSION: "1.0"
            PLATFORM: "linux/amd64"
          - QUARTO_VERSION: "1.1"
            PLATFORM: "linux/amd64"
          - QUARTO_VERSION: "1.2"
            PLATFORM: "linux/amd64"
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@v3
        with:
          use: true
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and run Dev Container on release
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}
          imageTag: ${{ matrix.QUARTO_VERSION }},${{ matrix.QUARTO_VERSION }}-jammy
          noCache: true
          push: always
          platform: ${{ matrix.PLATFORM }}
          configFile: ${{ format('.devcontainer/mcanouil-{0}/devcontainer.json', matrix.QUARTO_VERSION) }}

  clean:
    runs-on: ubuntu-latest
    needs:
      - "build-versions"
    if: >-
      github.event_name == 'release' ||
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'schedule'
    continue-on-error: true
    steps:
      - name: Delete obsolete/untagged versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: "container"
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-only-untagged-versions: "true"
